@font-face {
    font-family: notosansmono;
    src: url(assets/NotoSansMono-VariableFont_wdth\,wght.ttf);
    font-weight: 400;
}

* { image-rendering: pixelated; user-select: none; }
body {
    height: 100vh;
    width: 100vw;
    overflow: hidden;
    background: #222;
    color: #fff;
    font-family: notosansmono;
    margin: 0;
    font-size: 0;
    
    --highlight: #fff;
    --bright: #999;
    --dark: #333;
    --background: #111;
}

button {
    --this-background: var(--background);
    border: none;
    outline: none;
    background: var(--this-background);
    color: var(--highlight);
    cursor: pointer;
}
button:hover, dropdown:hover {
    --this-background: var(--dark);
    outline: 2px solid var(--highlight);
    outline-offset: -2px;
}

header {
    box-sizing: border-box;
    padding: 4px;
    width: 100%;
    height: 52px;
    font-size: 0;
    display: none;
}

body[state="normal"] #header {display: block}
body[state="recipeSearch"] #recipeSearchHeader, body[state="recipeSearch"] #searchOverlay {display: block}
body[state="itemSearch"] #itemSearchHeader, body[state="itemSearch"] #searchOverlay {display: block}
#header > button {
    display: inline-block;
    width: 36px;
    height: 36px;
    margin: 4px;
    padding: 2px;
    background-size: 32px;
    background-position: 2px 2px;
}
#newRecipeButton { background: var(--this-background) no-repeat url(assets/newRecipe.png) }
#newItemButton { background: var(--this-background) no-repeat url(assets/newItem.png) }
dropdown {
    --this-background: var(--background);
    position: relative;
    font-size: 16px;
    background: var(--this-background);
    height: 36px;
    width: 200px;
    margin: 4px;
    text-align: center;
    line-height: 36px;
    vertical-align: middle;
    cursor: pointer;
    float: right;
    z-index: 1;
}
dropdown > div {
    position: absolute;
    top: 100%;
    width: 100%;
    line-height: normal;
    display: none;
    font-size: 0px;
    button {
        width: 100%;
        border-top: 2px solid var(--dark);
    }
}
dropdown.open > div {display: block}
#infoText {
    margin: 8px;
    line-height: 36px;
    vertical-align: middle;
    font-size: 16px;
}

#itemSearchBar, #recipeSearchBar {
    border: none;
    outline: none;
    width: 300px;
    height: 36px;
    font-size: 16px;
    padding: 0px 8px;
    margin: 4px;
    background: var(--background);
    color: var(--highlight);
}
#searchOverlay {
    --scroll-offset: 0;
    position: absolute;
    width: 100%;
    height: calc(100% - 52px);
    top: 52px;
    background: #1115;
    z-index: 0;
    display: none;
    padding: 8px;
    overflow: hidden;
}
#searchOverlay node {
    position: relative;
    display: inline-block;
    margin: 8px;
    cursor: pointer;
    top: calc(var(--scroll-offset) * -1px);
    font-size: 0px;
    transform-origin: top left;
    padding: calc(16px * var(--scale));
}
#searchOverlay node.itemNode item {
    margin-bottom: 0;
    width: calc(128px * var(--scale));
    height: calc(128px * var(--scale));
}
#searchOverlay item:hover {
    outline: none;
}
#searchOverlay node.recipeNode {
    width: calc(300px * var(--scale));
    margin-top: calc(56px * var(--scale));
}
#searchOverlay .recipe-arrow {
    width: calc(80px * var(--scale));
    height: calc(60px * var(--scale));
}
#searchOverlay node item {
    width: calc(64px * var(--scale));
    height: calc(64px * var(--scale));
}
#searchOverlay .inputs, #searchOverlay .outputs {
    grid-template-columns: calc(64px * var(--scale));
    gap: calc(4px * var(--scale));
}
#searchOverlay .machine {
    top: calc(-48px * var(--scale));
    height: calc(48px * var(--scale));
    width: calc(48px * var(--scale));
    padding: calc(8px * var(--scale));
    background: no-repeat calc(8px * var(--scale)) calc(8px * var(--scale))/calc(48px * var(--scale)) var(--background) var(--image);
}
#searchOverlay .machine::after {
    left: calc(64px * var(--scale));
    height: calc(64px * var(--scale));
    padding-top: calc(8px * var(--scale));
    padding-right: calc(16px * var(--scale));
    font-size: calc(24px * var(--scale));
    line-height: calc(48px * var(--scale));
}
#searchOverlay item::after {
    font-size: calc(12px * var(--scale));
    text-shadow: calc(1px * var(--scale)) calc(1px * var(--scale)) var(--dark);
    line-height: calc(116px * var(--scale));
}

#hover {
    --posX: 0;
    --posY: 0;
    position: absolute;
    font-size: 12px;
    padding: 2px;
    background: var(--dark);
    left: calc(var(--posX) * 1px + 12px);
    top: calc(var(--posY) * 1px);
    display: none;
    z-index: 3;
    pointer-events: none;
}
#hover.show {
    display: block;
}

/* GRAPH STUFF STARTS HERE */

#wrapper {
    --posX: 0;
    --posY: 0;
    --scale: 1;
    width: 100%;
    height: calc(100% - 52px); /* surely theres a better way to do this but i kind of just dont care */
    background: url(assets/grid.png);
    background-size: calc(256px * var(--scale));
    background-position: calc(var(--posX) * 1px) calc(var(--posY) * 1px);
    overflow: hidden;
}
#graph {
    position: relative;
    width: 0;
    height: 0;
    left: calc(var(--posX) * 1px);
    top: calc(var(--posY) * 1px);
    transform: scale(var(--scale));
}

node {
    font-size: 0;
    position: absolute;
    display: block;
    background: var(--background);
    box-sizing: border-box;
    --posX: 0;
    --posY: 0;
    padding: 16px;
    left: calc(round(down, var(--posX)) * 1px);
    top: calc(round(down, var(--posY)) * 1px);
}
.delete {
    position: absolute;
    font-size: 16px;
    top: -24px;
    right: 0px;
    height: 24px;
    width: 24px;
    background: var(--background);
    text-align: center;
    cursor: pointer;
}

item {
    position: relative;
    display: block;
    width: 64px;
    height: 64px;
    background: var(--dark) var(--image);
    background-size: contain;
    transition: outline 0.05s;
    --outline-width-multiplier: 1;
    outline: 0px solid;
    outline-offset: -2px;
}
item::after {
    content: attr(quantity);
    font-size: 12px;
    text-shadow: 1px 1px var(--dark);
    position: absolute;
    display: block;
    width: 100%;
    height: 100%;
    top: 0;
    background: var(--imageOverlay);
    background-size: contain;
    text-align: right;
    line-height: 116px;
}
item:hover, item.connecting {
    outline: calc(4px * var(--outline-width-multiplier)) solid #ffffff;
}
item[style*="--imageModulation"]::before {
    content: " ";
    display: block;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    mask-image: var(--image);
    mask-size: contain;
    background: var(--imageModulation);
    mix-blend-mode: multiply;
}

/* RECIPENODE */
.recipeNode {
    width: 300px;
}

.machine {
    position: absolute;
    top: -48px;
    left: 0px;
    height: 48px;
    width: 48px;
    padding: 8px;
    padding-bottom: 0;
    background: no-repeat 8px 8px/48px var(--background) var(--image);
    text-align: center;
}
.machine::after {
    position: absolute;
    top: 0px;
    left: 64px;
    height: 64px;
    padding: 8px 16px 0px 0px;
    content: attr(amount);
    font-size: 24px;
    line-height: 48px;
    vertical-align: middle;
    background: var(--background);
}
.inputs, .outputs {
    display: inline-grid;
    grid-template-columns: 64px;
    gap: 4px;
}
.recipe-arrow {
    position: absolute;
    display: block;
    width: 80px;
    height: 60px;
    background: left top/contain url(assets/recipeArrow.png);
    left: 50%;
    top: 50%;
    translate: -50% -50%;
}
.outputs {
    float: right;
}

/* ITEMNODE */
.itemNode item {
    width: 128px;
    height: 128px;
    --outline-width-multiplier: 2;
    margin-bottom: 4px;
}
.itemNode .number-container {
    display: flex;
    width: 128px;
}
.itemNode input, .itemNode button, .itemNode span {
    box-sizing: border-box;
    font-size: 16px;
    padding: 0px 4px;
    outline: none;
    border: none;
    background: var(--dark);
}
.itemNode input {
    min-width: 0;
    color: var(--highlight);
    text-align: right;
    margin-bottom: 4px;
    flex-shrink: 1;
}
.itemNode input:focus {
    outline: 2px solid var(--highlight);
}
.itemNode input:focus + span {
    outline: 2px solid var(--highlight);
}
.itemNode span {
    margin-bottom: 4px;
    padding-left: 0;
}
.itemNode button {
    height: 24px;
    color: var(--highlight);
}
.itemNode button:hover {
    background: var(--bright);
}

/* LINE */
line {
    position: absolute;
    --aX: 0;
    --aY: 0;
    --bX: 0;
    --bY: 0;
    --width: 2px;
    --distance: calc(sqrt(
        pow(var(--aX) - var(--bX), 2) + pow(var(--aY) - var(--bY), 2)
    ));
    left: calc(var(--aX) * 1px + 2px);
    top: calc(var(--aY) * 1px - var(--width));
    transform-origin: -2px var(--width);
    height: calc(var(--width) * 2);
    width: calc(var(--distance) * 1px - 4px);
    rotate: calc(atan2(var(--bY) - var(--aY), var(--bX) - var(--aX)));
    background: url(assets/dashedline.png);
    background-size: contain;
    background-position: calc(var(--distance) * 0.5px) 0px;
}
line:hover {
    background: var(--highlight);
    --width: 4px;
}