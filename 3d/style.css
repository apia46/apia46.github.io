* { 
    image-rendering: optimizeSpeed;             /* STOP SMOOTHING, GIVE ME SPEED  */
    image-rendering: -moz-crisp-edges;          /* Firefox                        */
    image-rendering: -o-crisp-edges;            /* Opera                          */
    image-rendering: -webkit-optimize-contrast; /* Chrome (and eventually Safari) */
    image-rendering: pixelated;                 /* Universal support since 2021   */
    image-rendering: optimize-contrast;         /* CSS3 Proposed                  */
    -ms-interpolation-mode: nearest-neighbor;   /* IE8+                           */

    transform-style: preserve-3d;
}

body {
    background: #222233;
    margin: 0;
    perspective: 550px;
    perspective-origin: 50vw 50vh;
    overflow: hidden;
}

#base {
    --size: 200px;
    position: absolute;
    width: var(--size);
    height: var(--size);
    top: calc(50vh - var(--size)/2);
    left: calc(50vw - var(--size)/2);
}

#grid {
    position: absolute;
    width: 100%;
    height: 100%;

    --camera-offset: translateY(200px) translateZ(400px) rotateX(80deg);
    transform: var(--camera-offset) rotateZ(calc(-1deg * var(--playerrotate)));
    transition: 400ms ease-in-out;
}

.tile {
    opacity: var(--bullshitopacity);
    position: absolute;
    width: 100%;
    height: 100%;
    background: url(assets/empty.gif);
    transition: 400ms linear;

    --player-offset: translateX(calc(-1 * var(--size) * var(--playerx))) translateY(calc(-1 * var(--size) * (var(--playery))));
    transform: var(--player-offset) translateX(calc(var(--size) * var(--xpos))) translateY(calc(var(--size) * var(--ypos)));
}
.tile.dontbullshit {
    transition: opacity 0ms transform 400ms linear;
    opacity: round(up, var(--bullshitopacity)); /* fucking undocumented css bullshit bug */
    div {
        opacity: var(--bullshitopacity);
        transition: 400ms linear;
    }
}
.empty {
    background: none;
}

#player {
    box-sizing: border-box;
    position: absolute;
    width: 100%;
    height: 100%;
    background: #00ffff;
    border: 10px solid #000000;
}

@property --rotateY {
    syntax: '<angle>';
    inherits: false;
    initial-value: 0deg;
}
@property --rotateX {
    syntax: '<angle>';
    inherits: false;
    initial-value: 0deg;
}
@keyframes Y-SPINNY {
    0% { --rotateY: 0deg }
    100% { --rotateY: 360deg }
}
@keyframes X-SPINNY {
    0% { --rotateX: 0deg }
    100% { --rotateX: 360deg }
}
.colonthree {
    position: absolute;
    width: 200%;
    height: 200%;
    left: -50%;
    top: -50%;
    background: url('assets/colonthree.png');
    background-size: cover;
    transform: translateZ(200px) rotateX(90deg) rotateY(var(--rotateY)) rotateX(var(--rotateX));
    animation: Y-SPINNY 5s infinite linear, X-SPINNY 15s infinite linear ;
}
.colonthree::after {
    content: ' ';
    position: absolute;
    width: 100%;
    height: 100%;
    background: url('assets/colonthree.png');
    background-size: cover;
    transform: translateZ(5px);
}
.colonthree::before {
    content: ' ';
    position: absolute;
    width: 100%;
    height: 100%;
    background: url('assets/colonthree.png');
    background-size: cover;
    transform: translateZ(-5px);
}

.sign {
    position: absolute;
    width: 100%;
    height: 50%;
    top: 25%;
    font-size: 14px;
    background: #ffffff;
    color: #000000;
    text-align: center;
    border: 4px solid #000000;
    transform: translateZ(100px) rotateX(-90deg);
}
.sign::after {
    content: ' ';
    position: absolute;
    top: 100%;
    left: 45%;
    width: 10%;
    height: 50%;
    background: #000000;
}