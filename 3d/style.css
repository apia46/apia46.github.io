#base, #base * { 
    image-rendering: optimizeSpeed;             /* STOP SMOOTHING, GIVE ME SPEED  */
    image-rendering: -moz-crisp-edges;          /* Firefox                        */
    image-rendering: -o-crisp-edges;            /* Opera                          */
    image-rendering: -webkit-optimize-contrast; /* Chrome (and eventually Safari) */
    image-rendering: pixelated;                 /* Universal support since 2021   */
    image-rendering: optimize-contrast;         /* CSS3 Proposed                  */
    -ms-interpolation-mode: nearest-neighbor;   /* IE8+                           */

    transform-style: preserve-3d;
}

body {
    width: 100vw;
    height: 100vh;
    background: #222233;
    margin: 0;
    perspective: 550px;
    perspective-origin: 50vw 50vh;
    overflow: hidden;
}
@keyframes FADEIN {
    0% { opacity: 0; }
    10% { opacity: 0; }
    100% { opacity: 1; }
}
.loading {
    animation: FADEIN 250ms;
}
body.loading * {
    transition: none !important;
}

a {
    color: #00ffff;
}
a:visited {
    color: #ff00ff;
}

#controls {
    perspective: 0px;
    z-index: 9999;
    position: absolute;
    bottom: 0;
    left: 50vw;
    translate: -50% 0;
    opacity: 0.5;
    transition: 500ms;
    display: inline-grid;
    grid-template-columns: repeat(5, 1fr);;
    button {
        width: 64px;
        height: 64px;
        margin: 4px;
        border: 4px solid #ffff00;
        background: #000000;
        color: #ffff00;
        font-size: 32px;
        font-family: spacemono;
        transition: 500ms;
    }
    button:hover {
        border: 4px solid #00ffff;
        color: #00ffff;
    }
}
#controls:hover {
    opacity: 1;
}
body.lookaround #controls #lookaround {
    border-style: double;
    border-width: 6px;
}

#base {
    --size: 200px;
    position: absolute;
    width: var(--size);
    height: var(--size);
    top: calc(50vh - var(--size)/2);
    left: calc(50vw - var(--size)/2);
}

#grid {
    position: absolute;
    width: 100%;
    height: 100%;

    --lookaround-offset: translate(0);
    --camera-offset: translateZ(400px) var(--lookaround-offset) translateY(calc(200px + var(--playerzoffset) + var(--playerflooroffset))) rotateX(90deg);
    transform: var(--camera-offset) rotateZ(calc(-1deg * var(--playerrotate)));
    transition: 400ms ease-in-out;
}
body.lookaround #grid {
    transition: 0ms;
    --lookaround-offset: rotateX(calc(var(--lookaroundy) * 0.1deg)) rotateY(calc(var(--lookaroundx) * -0.1deg))
}
body.lookaround * {
    user-drag: none;
    -webkit-user-drag: none;
    user-select: none;
    -moz-user-select: none;
    -webkit-user-select: none;
    -ms-user-select: none;
    img {
        pointer-events: none;
    }
}
body.lookaround .lookarounddisable {
    opacity: 0;
}

.floor {
    position: absolute;
    width: 100%;
    height: 100%;
    transform: translateZ(var(--floorheight));
}

.tile {
    opacity: var(--bullshitopacity);
    position: absolute;
    width: 100%;
    height: 100%;
    background: url(assets/empty.gif);
    transition: 400ms linear;

    --player-offset: translateX(calc(-1 * var(--size) * var(--playerx))) translateY(calc(-1 * var(--size) * (var(--playery))));
    transform: var(--player-offset) translateX(calc(var(--size) * var(--xpos))) translateY(calc(var(--size) * var(--ypos)));
}
.tile.dontbullshit {
    transition: opacity 0ms transform 400ms linear;
    opacity: round(up, var(--bullshitopacity)); /* fucking undocumented css bullshit bug */
    div {
        opacity: var(--bullshitopacity);
        transition: 400ms linear;
    }
}
.tile.zoffset {
    translate: 0 0 var(--zoffset);
}
.tile.empty {
    background: none;
}
.tile.tile2 {
    background: url('assets/empty2.gif');
}

.alwaysvisible, .alwaysvisible * {
    opacity: 1 !important;
}

.turn90 { rotate: z 90deg; }
.turn180 { rotate: z 180deg; }
.turn270 { rotate: z 270deg; }


#player {
    box-sizing: border-box;
    position: absolute;
    width: 100%;
    height: 100%;
    background: #00ffff;
    border: 10px solid #000000;
}
#grid[playerdirection="0"] #player { border-top: 10px solid #ffff00; }
#grid[playerdirection="90"] #player { border-right: 10px solid #ffff00; }
#grid[playerdirection="180"] #player { border-bottom: 10px solid #ffff00; }
#grid[playerdirection="270"] #player { border-left: 10px solid #ffff00; }

.exit {
    box-sizing: border-box;
    position: absolute;
    width: 100%;
    height: 100%;
    background: #ffff00;
    border: 10px solid #000000;
}

@property --rotateY {
    syntax: '<angle>';
    inherits: false;
    initial-value: 0deg;
}
@property --rotateX {
    syntax: '<angle>';
    inherits: false;
    initial-value: 0deg;
}
@keyframes Y-SPINNY {
    0% { --rotateY: 0deg }
    100% { --rotateY: 360deg }
}
@keyframes X-SPINNY {
    0% { --rotateX: 0deg }
    100% { --rotateX: 360deg }
}
.colonthree {
    position: absolute;
    width: 200%;
    height: 200%;
    left: -50%;
    top: -50%;
    background: url('assets/colonthree.png');
    background-size: cover;
    transform: translateZ(200px) rotateX(90deg) rotateY(var(--rotateY)) rotateX(var(--rotateX));
    animation: Y-SPINNY 5s infinite linear, X-SPINNY 15s infinite linear ;
}
.colonthree::after {
    content: ' ';
    position: absolute;
    width: 100%;
    height: 100%;
    background: url('assets/colonthree.png');
    background-size: cover;
    transform: translateZ(5px);
}
.colonthree::before {
    content: ' ';
    position: absolute;
    width: 100%;
    height: 100%;
    background: url('assets/colonthree.png');
    background-size: cover;
    transform: translateZ(-5px);
}

.sign {
    position: absolute;
    width: 100%;
    height: 50%;
    top: 25%;
    font-size: 14px;
    background: #ffffff;
    color: #000000;
    text-align: center;
    border: 4px solid #000000;
    transform: translateZ(100px) rotateX(-90deg);
    p {
        margin-top: 8px;
    }
}
.sign::after {
    content: ' ';
    position: absolute;
    top: 100%;
    left: 45%;
    width: 10%;
    height: 50%;
    background: #000000;
}
.sign.smallfont { font-size: 12px; p {margin-top: 6px;} }

#infoboard {
    position: absolute;
    width: 300%;
    height: 250%;
    top: -75%;
    left: -100%;
    font-size: 14px;
    background: #000000;
    color: #ffffff;
    text-align: center;
    transform: translateZ(300px) rotateX(270deg);
    padding: 4px;
    h1 {
        color: #00ffff;
        margin-top: 4px;
    }
    img {
        width: 95%;
        height: auto;
    }
}

.floatyindicator {
    position: absolute;
    width: 100%;
    height: 100%;
    transform: translateZ(250px) rotateX(-90deg);
}
.floatyindicator.one {
    background: url('assets/one.png');
    background-size: cover;
}
.floatyindicator.two {
    background: url('assets/two.png');
    background-size: cover;
}
.floatyindicator.three {
    background: url('assets/three.png');
    background-size: cover;
}

#gullible {
    text-align: center;
    width: 200%;
    left: -50%;
    height: 100%;
    top: -50%;
    position: absolute;
    font-size: 96px;
    color: #ffffff;
    transform: translateY(25%) translateZ(-100px) rotateX(180deg);
}